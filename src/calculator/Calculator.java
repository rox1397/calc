/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

/**
 *
 * @author ehamburger2015
 * Replica of the Windows calculator
 * 
 */
public class Calculator extends javax.swing.JFrame {

    private boolean decimal = false;
    private boolean negative = false;
    private boolean typeable = true;
    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        display = new javax.swing.JTextField();
        button_backspace = new javax.swing.JButton();
        button_c = new javax.swing.JButton();
        button_sqrt = new javax.swing.JButton();
        button_neg = new javax.swing.JButton();
        button_ce = new javax.swing.JButton();
        button_7 = new javax.swing.JButton();
        button_8 = new javax.swing.JButton();
        button_9 = new javax.swing.JButton();
        button_divide = new javax.swing.JButton();
        button_mod = new javax.swing.JButton();
        button_4 = new javax.swing.JButton();
        button_5 = new javax.swing.JButton();
        button_6 = new javax.swing.JButton();
        button_multiply = new javax.swing.JButton();
        button_inverse = new javax.swing.JButton();
        button_1 = new javax.swing.JButton();
        button_2 = new javax.swing.JButton();
        button_3 = new javax.swing.JButton();
        button_minus = new javax.swing.JButton();
        button_0 = new javax.swing.JButton();
        button_decimal = new javax.swing.JButton();
        button_plus = new javax.swing.JButton();
        button_equals = new javax.swing.JButton();
        hold = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");

        display.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        display.setText("0");

        button_backspace.setText("←");
        button_backspace.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_backspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_backspaceActionPerformed(evt);
            }
        });

        button_c.setText("C");
        button_c.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cActionPerformed(evt);
            }
        });

        button_sqrt.setText("√");
        button_sqrt.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sqrtActionPerformed(evt);
            }
        });

        button_neg.setText("±");
        button_neg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_neg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_negActionPerformed(evt);
            }
        });

        button_ce.setText("CE");
        button_ce.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_ce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_ceActionPerformed(evt);
            }
        });

        button_7.setText("7");
        button_7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_7ActionPerformed(evt);
            }
        });

        button_8.setText("8");
        button_8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_8ActionPerformed(evt);
            }
        });

        button_9.setText("9");
        button_9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_9ActionPerformed(evt);
            }
        });

        button_divide.setText("/");
        button_divide.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_divideActionPerformed(evt);
            }
        });

        button_mod.setText("%");
        button_mod.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_modActionPerformed(evt);
            }
        });

        button_4.setText("4");
        button_4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_4ActionPerformed(evt);
            }
        });

        button_5.setText("5");
        button_5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_5ActionPerformed(evt);
            }
        });

        button_6.setText("6");
        button_6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_6ActionPerformed(evt);
            }
        });

        button_multiply.setText("*");
        button_multiply.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_multiplyActionPerformed(evt);
            }
        });

        button_inverse.setText("^-1");
        button_inverse.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_inverseActionPerformed(evt);
            }
        });

        button_1.setText("1");
        button_1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_1ActionPerformed(evt);
            }
        });

        button_2.setText("2");
        button_2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_2ActionPerformed(evt);
            }
        });

        button_3.setText("3");
        button_3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_3ActionPerformed(evt);
            }
        });

        button_minus.setText("-");
        button_minus.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_minusActionPerformed(evt);
            }
        });

        button_0.setText("0");
        button_0.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_0ActionPerformed(evt);
            }
        });

        button_decimal.setText(".");
        button_decimal.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_decimalActionPerformed(evt);
            }
        });

        button_plus.setText("+");
        button_plus.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_plusActionPerformed(evt);
            }
        });

        button_equals.setText("=");
        button_equals.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button_equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_equalsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(display)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(button_backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button_ce, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button_c, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button_neg, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(button_sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button_7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_divide, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_mod, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button_4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(button_1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(button_0, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_equals, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hold)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(hold, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_ce, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_c, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_neg, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_divide, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_mod, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(button_equals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Backspace event handler
    //Checks for all numbers deleted and erasing decimals for extra functions
    private void button_backspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_backspaceActionPerformed
        if(display.getText().substring(display.getText().length()-1).equals("."))
        {
            decimal = false;
        }
        display.setText(display.getText().substring(0, display.getText().length()-1));
        if(display.getText().equals("") || display.getText() == null)
        {
            display.setText("0");
        }
    }//GEN-LAST:event_button_backspaceActionPerformed
    
    //0 event handler
    //Does not allow two sequential zeroes as the first numbers
    private void button_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_0ActionPerformed
        if(!display.getText().equals("0") && typeable)
        {
            display.setText(display.getText() + "0");
        }
    }//GEN-LAST:event_button_0ActionPerformed

    //1 event handler
    private void button_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_1ActionPerformed
        add("1");
    }//GEN-LAST:event_button_1ActionPerformed

    //2 event handler
    private void button_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_2ActionPerformed
        add("2");
    }//GEN-LAST:event_button_2ActionPerformed

    //3 event handler
    private void button_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_3ActionPerformed
        add("3");
    }//GEN-LAST:event_button_3ActionPerformed

    //4 event handler
    private void button_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_4ActionPerformed
        add("4");
    }//GEN-LAST:event_button_4ActionPerformed

    //5 event handler
    private void button_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_5ActionPerformed
        add("5");
    }//GEN-LAST:event_button_5ActionPerformed

    //6 event handler
    private void button_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_6ActionPerformed
        add("6");
    }//GEN-LAST:event_button_6ActionPerformed

    //7 event handler
    private void button_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_7ActionPerformed
        add("7");
    }//GEN-LAST:event_button_7ActionPerformed

    //8 event handler
    private void button_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_8ActionPerformed
        add("8");
    }//GEN-LAST:event_button_8ActionPerformed

    //9 event handler
    private void button_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_9ActionPerformed
        add("9");
    }//GEN-LAST:event_button_9ActionPerformed

    //Decimal event handler
    //Does not allow two deicmals in the same number
    private void button_decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_decimalActionPerformed
        if(!decimal)
        {
            display.setText(display.getText() + ".");
            decimal = true;
        }
    }//GEN-LAST:event_button_decimalActionPerformed

    //Takes the square root of the number in the active text field
    private void button_sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sqrtActionPerformed
        hold.setText("sqrt(" + display.getText() + ")");
        if(!negative)
        {
            if(decimal)
            {
                double temp = Double.parseDouble(display.getText());
                display.setText("" + Math.sqrt(temp));
            }
            else
            {
                int temp = Integer.parseInt(display.getText());
                display.setText("" + Math.sqrt(temp));
            }
        }
        else
        {
            display.setText("Err: Unreal");
            typeable = false;
        }
    }//GEN-LAST:event_button_sqrtActionPerformed

    //Clears all numbers in memory
    private void button_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cActionPerformed
        display.setText("0");
        hold.setText("");
        typeable = true;
        decimal = false;
        negative = false;
    }//GEN-LAST:event_button_cActionPerformed

    //Switches negative numbers to positive and vice versa
    private void button_negActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_negActionPerformed
        if(!display.getText().substring(0, 1).equals("0"))    
            if(display.getText().substring(0, 1).equals("-"))
            {
                display.setText(display.getText().substring(1));
                negative = false;
            }
            else
            {
                display.setText("-" + display.getText());
                negative = true;
            }
    }//GEN-LAST:event_button_negActionPerformed

    //Clears the current entry
    private void button_ceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_ceActionPerformed
        display.setText("0");
        decimal = false;
        negative = false;
        typeable = true;
    }//GEN-LAST:event_button_ceActionPerformed

    //Plus operator
    private void button_plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_plusActionPerformed
        hold.setText(display.getText() + " +");
        display.setText("0");
        decimal = false;
    }//GEN-LAST:event_button_plusActionPerformed

    //Miunus operator
    private void button_minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_minusActionPerformed
        hold.setText(display.getText() + " -");
        display.setText("0");
        decimal = false;
    }//GEN-LAST:event_button_minusActionPerformed

    //Multiply operator
    private void button_multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_multiplyActionPerformed
        hold.setText(display.getText() + " *");
        display.setText("0");
        decimal = false;
    }//GEN-LAST:event_button_multiplyActionPerformed

    //Divide operator
    private void button_divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_divideActionPerformed
        hold.setText(display.getText() + " /");
        display.setText("0");
        decimal = false;
    }//GEN-LAST:event_button_divideActionPerformed

    //Mod operator
    private void button_modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_modActionPerformed
        hold.setText(display.getText() + " %");
        display.setText("0");
        decimal = false;
    }//GEN-LAST:event_button_modActionPerformed

    //Raises the number in the active field to the pwoer of negative 1
    private void button_inverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_inverseActionPerformed
        hold.setText(display.getText() + "^-1");
        if(decimal)
        {
            double temp = Double.parseDouble(display.getText());
            display.setText("" + 1/temp);
        }
        else
        {
            int temp = Integer.parseInt(display.getText());
            display.setText("" + (double) 1/temp);
        }
        typeable = false;
    }//GEN-LAST:event_button_inverseActionPerformed

    //Performs the operation in the hold text field
    private void button_equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_equalsActionPerformed
        if(!hold.getText().equals("") && hold.getText() != null)
        {
            //Addition
            if(hold.getText().substring(hold.getText().length()-1).equals("+"))
            {
                String temp = hold.getText().substring(0, hold.getText().length()-2);
                if(hold.getText().contains("."))
                {
                    double check = Double.parseDouble(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " + " + main);
                        display.setText("" + (check + main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " + " + main);
                        display.setText("" + (double) (check + main));
                    }
                }
                else
                {
                    int check = Integer.parseInt(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " + " + main);
                        display.setText("" + (double) (check + main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " + " + main);
                        display.setText("" + (check + main));
                    }
                }
            }
            //Subtraction
            if(hold.getText().substring(hold.getText().length()-1).equals("-"))
            {
                String temp = hold.getText().substring(0, hold.getText().length()-2);
                if(hold.getText().contains("."))
                {
                    double check = Double.parseDouble(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " - " + main);
                        display.setText("" + (check - main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " - " + main);
                        display.setText("" + (double) (check - main));
                    }
                }
                else
                {
                    int check = Integer.parseInt(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " - " + main);
                        display.setText("" + (double) (check - main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " - " + main);
                        display.setText("" + (check - main));
                    }
                }
            }
            //Multiplication
            if(hold.getText().substring(hold.getText().length()-1).equals("*"))
            {
                String temp = hold.getText().substring(0, hold.getText().length()-2);
                if(hold.getText().contains("."))
                {
                    double check = Double.parseDouble(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " * " + main);
                        display.setText("" + (check * main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " * " + main);
                        display.setText("" + (double) (check * main));
                    }
                }
                else
                {
                    int check = Integer.parseInt(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " * " + main);
                        display.setText("" + (double) (check * main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " * " + main);
                        display.setText("" + (check * main));
                    }
                }
            }
            //Division
            if(hold.getText().substring(hold.getText().length()-1).equals("/"))
            {
                if(!display.getText().equals("0"))
                {
                    String temp = hold.getText().substring(0, hold.getText().length()-2);
                    if(hold.getText().contains("."))
                    {
                        double check = Double.parseDouble(temp);
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " / " + main);
                        display.setText("" + (double) (check / main));
                    }
                    else
                    {
                        int check = Integer.parseInt(temp);
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " / " + main);
                        display.setText("" + (double) (check / main));
                    }
                }
                else
                {
                    hold.setText(hold.getText() + " 0");
                    display.setText("Err: Divide by zero");
                }
            }
            //Modulus
            if(hold.getText().substring(hold.getText().length()-1).equals("%"))
            {
                String temp = hold.getText().substring(0, hold.getText().length()-2);
                if(hold.getText().contains("."))
                {
                    double check = Double.parseDouble(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " % " + main);
                        display.setText("" + (check % main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " % " + main);
                        display.setText("" + (double) (check % main));
                    }
                }
                else
                {
                    int check = Integer.parseInt(temp);
                    if(decimal)
                    {
                        double main = Double.parseDouble(display.getText());
                        hold.setText(check + " % " + main);
                        display.setText("" + (double) (check % main));
                    }
                    else
                    {
                        int main = Integer.parseInt(display.getText());
                        hold.setText(check + " % " + main);
                        display.setText("" + (check % main));
                    }
                }
            }
            typeable = false;
        }
    }//GEN-LAST:event_button_equalsActionPerformed

    //Appends the text field with a number
    public void add(String character)
    {
        if(typeable)
        {
            if(!display.getText().equals("0"))
            {
                display.setText(display.getText() + character);
            }
            else
            {
                display.setText(character);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_0;
    private javax.swing.JButton button_1;
    private javax.swing.JButton button_2;
    private javax.swing.JButton button_3;
    private javax.swing.JButton button_4;
    private javax.swing.JButton button_5;
    private javax.swing.JButton button_6;
    private javax.swing.JButton button_7;
    private javax.swing.JButton button_8;
    private javax.swing.JButton button_9;
    private javax.swing.JButton button_backspace;
    private javax.swing.JButton button_c;
    private javax.swing.JButton button_ce;
    private javax.swing.JButton button_decimal;
    private javax.swing.JButton button_divide;
    private javax.swing.JButton button_equals;
    private javax.swing.JButton button_inverse;
    private javax.swing.JButton button_minus;
    private javax.swing.JButton button_mod;
    private javax.swing.JButton button_multiply;
    private javax.swing.JButton button_neg;
    private javax.swing.JButton button_plus;
    private javax.swing.JButton button_sqrt;
    private javax.swing.JTextField display;
    private javax.swing.JLabel hold;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
